html,
.mainContentBackdrop {
    /* if we need different bg color for different areas (public/backstage), then */
    background-color: #eee;
}

.CMDashboard2 {
    display: flex;
}


.singlePageSurface {
    /* spacing is already provided by parent layout*/
    /* margin: 20px; */
    padding: 0px 20px;
    border-radius: 6px;
    background-color: white;
    margin-bottom: 40px;
    box-shadow: var(--subtle-elevation);
    max-width: 1500px;
}

/* - CM Big Chip --------------------------------- */
.cmbigchip {
    font-size: 14px;
    padding-bottom: 15px;
    text-transform: uppercase;
    display: flex;
    justify-content: center;
    align-items: center;
    letter-spacing: 2px;
    font-weight: bold;

}

.cmbigchip .content {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2px 10px;
    border-radius: 10px;
}

.cmbigchip.strong .content {
    background-color: var(--strong-color);
    color: var(--strong-contrast-color);
}

.cmbigchip.weak .content {
    background-color: var(--weak-color);
    color: var(--weak-contrast-color);
}

.bigChipContainer {
    flex-direction: column;
}

/* - CM Big Status --------------------------------- */
.bigstatus {
    font-size: 14px;
    text-transform: uppercase;
    display: flex;
    justify-content: center;
    align-items: center;
    letter-spacing: 2px;
    font-weight: bold;
}



/* -  --------------------------------- */
.eventPublishedControl {
    display: flex;
}

/* .eventPublishedControl.published {
    background-color: #0802;
}

.eventPublishedControl.unpublished {
    background-color: #f802;
} */

.eventPublishedValue {
    display: flex;
    text-transform: uppercase;
    align-items: center;
}


/* ---------------------------------- */
.eventTypeControl {}

.eventTypeValue {}


/* ---------------------------------- */
.CMChipContainer {
    display: flex;
}

.CMChipContainer .CMChip {
    margin: 1px 1px;
}

.CMChip {
    /* requires an .applyColor- css class for coloring */
    /* background-color: #eee;
    border: 1px solid #ccc;
    color: #888; */

    /* instant transitions for filtering etc feel clunky almost broken or something. the smoothness feels comfy */

    transition: border .1s, color .1s;

    width: min-content;
    max-width: 250px;
    user-select: none;
    overflow: hidden;
    white-space: nowrap;
    display: flex;
}

.CMChip.big {
    padding: 2px;
    border-radius: 19px;
}

.CMChip.big .chipMain {
    font-size: 16px;
    padding: 1px 12px;
    border-radius: 19px;
}

.CMChip.small {
    padding: 2;
    border-radius: 19px;
}

.CMChip.small .chipMain {
    font-size: 13px;
    padding: 1px 6px;
    border-radius: 19px;
}

.CMChip .content {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    display: flex;
}

.CMChip.selected {
    border: 2px solid black;
}

.CMChip.notselected {
    border: 2px solid transparent;
}

/* general purpose style for interactable things like buttons. avoid selection which is awkward with mouse */
.interactable {
    user-select: none;
    cursor: pointer;
}


.debugInspectorOpen {
    user-select: none;
    cursor: pointer;
    border: 2px solid #aa08;
    background-color: #8ff8;
    padding: 2px;
    margin: 2px;
    width: min-content;
    display: inline-flex;
}

/* https://stackoverflow.com/questions/5697067/css-for-grabbing-cursors-drag-drop */
.draggable {
    cursor: move;
    cursor: grab;
}

.draggable:active {
    cursor: grabbing;
}


.EventSongListValueEditor .columnName-name input,
.EventSongListValueViewer .columnName-name {
    font-size: 24px;
    font-weight: bold;
    text-transform: uppercase;
}

/* 
this is for use of <InputBase /> as simple text fields. <TextField /> is too bulky sometimes.
in the case of using within Autocomplete, I can't specify my own class names to the InputBase itself. i have to use a wrapper.
so consider these equal:

<div class="cmdbSimpleInputWrapper">
    <input ...>
</div>

or,

<input class="cmdbSimpleInput">

*/
/* 
.cmdbSimpleInputWrapper .MuiInputBase-input .cmdbSimpleInput {
    border-radius: 3px;
    margin: 1px;
    padding: 1px;
    border: 1px solid #0001;
}

.cmdbSimpleInputWrapper .MuiInputBase-input:focus,
.cmdbSimpleInputWrapper .MuiInputBase-input:active {
    border: 1px solid black;
} */

.EventSongListValue .stats {
    margin: 2px;
    /* background-color: #0003; */
    padding: 5px 14px;
    color: #00000096;
}

.songListSongTable {
    width: 1000px;
    /* for small windows this makes it smaller so it doesn't overflow the screen. */
    max-width: 100%;
    border-bottom: 1px solid #ccc;
}

.songListSongTable .th {
    font-weight: bold;
    /* background-color: #0001; */
    color: #0005;
    border-bottom: 1px solid #0003;
    /* font-style: italic; */
}

.songListSongTable .td,
.songListSongTable .th {
    display: flex;
    justify-content: center;
    margin: 2px 0;
}

.songListSongTable .td:hover {
    background-color: #8881;
}

.songListSongTable .td.dragHandle,
.songListSongTable .th.dragHandle {
    user-select: none;
    width: 30px;
}

.songListSongTable .td.songIndex,
.songListSongTable .th.songIndex {
    width: 44px;
}

.songListSongTable .td.songIndex {
    font-family: monospace;
}

.songListSongTable .td.icon,
.songListSongTable .th.icon {
    width: 30px;
}

.songListSongTable .tr.invalidItem .td.songIndex,
.songListSongTable .tr.invalidItem .td.dragHandle,
.songListSongTable .tr.invalidItem .td.icon {
    color: #0002;
}

.songListSongTable .td.icon {
    color: #0005;
}

.songListSongTable .td.icon svg {
    height: 20px;
}

.songListSongTable .td.songName,
.songListSongTable .th.songName {
    /* flex-grow: 1; */
    width: 350px;
    display: flex;
    justify-content: flex-start;
    font-weight: bold;

}

.songListSongTable .td.songName .cmdbSimpleInput {
    font-weight: bold;
    padding: 0;
}

.songListSongTable .td.length,
.songListSongTable .th.length {
    width: 80px;
}

.songListSongTable .td.length {
    font-family: monospace;
}

.songListSongTable .td.tempo,
.songListSongTable .th.tempo {
    width: 80px;
}

.songListSongTable .td.tempo {
    font-family: monospace;
}

.songListSongTable .td.comment,
.songListSongTable .th.comment {
    flex-grow: 1;
    min-width: 150px;
}

.songListSongTable .td.comment {
    font-style: italic;
    color: #0008;
}

.songListSongTable .td.comment .cmdbSimpleInput {
    width: 100%;
}

.songListSongTable .td.comment input::placeholder {
    color: #0005;
    font-size: 12px;
}

.songListSongTable .td.comment:hover input::placeholder {
    color: #000;
    font-size: 12px;
}

.songListSongTable .tr {
    display: flex;
    /* interacts with the max-width:100% of the table to allow the comments field to wrap to the next line*/
    flex-wrap: wrap;
}

.songListSongTable .thead .tr {}


.songListSongTable .tbody .tr {
    /* makes icons and things center vertically within cells; looks cleaner */
    align-items: center;
}


.songListSongTable .td,
.songListSongTable .th {
    display: flex;
    white-space: nowrap;
}


.EventSongListValue {
    margin: 0 10px;
    /* box-shadow: inset 0 0 4px #00000030; */
    padding: 10px;
    border-radius: 8px;
    /* background-color: #ffe; */
    border: 1px solid #ed0;
    border-top: 8px solid #ed0;
    margin-bottom: 19px;
}

/* autocomplete dropdown for songs */
li.songDropdownOption {
    white-space: nowrap;
}

.freeButton {
    cursor: pointer;
}

.freeButton:hover {
    background-color: #ccc8;
}

.EventSongListValueEditor .MuiDialog-paper {
    max-width: 1200px;
}