:root {
  --drawer-paper-width: 100px;
  --data-grid-column-header-background-color: #f0f0f0;
  --primary-color: red;

  --subtle-elevation: 2px 2px 5px 2px rgba(0, 0, 0, 0.2);

  --color-transition-duration: .3s;

  --general-interactable-bgcolor: #79b;
  --general-interactable-color: #eee;

  --visibility-public-bgcolor: #cec;
  --visibility-public-color: #484;

  --visibility-private-bgcolor: #ecc;
  --visibility-private-color: #c00;

  --visibility-other-bgcolor: #ecc;
  --visibility-other-color: #000;
}

a,
a:link,
a:hover,
a:visited {
  text-decoration: none;
}


/* typically h1 at the top of a section doesn't need any padding or it looks awkwardly pushed down */
h1:first-child {
  padding-top: 0;
  margin-top: 0;
}

.smallIconButton {
  display: flex;
}

.MuiDrawer-paper {
  width: var(--drawer-paper-width);
}

.MuiButton-root {
  border: 2px outset #8883;
  padding: 1px 8px;
}

.MuiDataGrid-columnHeaders {
  background-color: var(--data-grid-column-header-background-color);
}

.MuiDataGrid-footerContainer {
  background-color: var(--data-grid-column-header-background-color);
}

.MuiDataGrid-toolbarContainer {
  background-color: var(--data-grid-column-header-background-color);
}

.hoverActionIcon:hover {
  color: var(--primary-color);
}

/* this is a small way to make selected nav more visible */
nav>.Mui-selected {
  border-right: 4px solid var(--primary-color);
}

nav>* {
  border-right: 4px solid transparent;
}

/* for selecting user roles, if user can select chip text it gets very annoying. */
.MuiChip-label {
  user-select: none;
}

.CMEditGrid2 {
  /* for some reason by default grids are 100% height; there's 0 reason to want that. */
  height: auto;
}

.CMEditGrid2 .MuiDataGrid-cell {
  /* align-items: flex-start; */
  /* allow things like tag chips to wrap */
  flex-wrap: wrap;
  /* and they look very ugly by default they fill space; this makes look more like text flow */
  align-content: baseline;
}

/* some datagrid values can be like, huge markdown pages or something. don't allow that to make the grid unreadable.*/
.MuiDataGrid-cellContent {
  overflow: hidden;
  text-overflow: ellipsis;
  max-height: 140px;
}

/* some datagrid values can be like, huge markdown pages or something. don't allow that to make the grid unreadable.*/
.MuiDataGrid-cellContent.NoMaxHeight {
  max-height: none;
}

div.Mui-error {
  background-color: #fee;
  border: 1px solid red;
}

div.chipContainer {
  padding: 4px;
}

div.chipContainer.validationError {
  background-color: #fee;
  border: 1px solid red;
}

div.chipContainer.validationSuccess {
  border: 1px solid green;
}

.cmdbChip {
  margin: 2px;
}

/* your profile page, instrument list */
div.instrumentListVertical {
  padding: 4px;
  display: flex;
  flex-direction: column;
}

div.instrumentListVertical.validationError {
  background-color: #fee;
  border: 1px solid red;
}

div.instrumentListVertical.validationSuccess {
  border: 1px solid green;
}

div.instrumentListVertical .instrumentAndPrimaryContainer {
  display: flex;
}


/* rich text editor */
.richTextContainer {
  display: flex;
  min-height: 50px;
  /* it's tempting to do this, to highlight where the text is, but all the various widths on the page are ugly af */
  /* background-color: rgba(0, 0, 0, 0.03); */
  max-width: 800px;
  flex-direction: column;
}

.richTextContainer.editMode {
  max-width: none;
  width: 100%;
}

.richTextContainer .richTextContentContainer {
  display: flex;
}

.richTextContainer.editMode .richTextContentContainer {}

.richTextContainer .editControlsContainer {
  /* background-color: rgba(0, 0, 0, 0.06); */
  background: linear-gradient(89deg, #0001, transparent);
}

.richTextContainer .editControlsContainer button {
  margin: 0;
  padding: 0;
}

.richTextContainer .editorContainer {
  /* more comfy leaving some space for the edit ctrls*/
  flex: 1;
  display: flex;
}

/* 
.richTextContainer .editorContainer .input {
  flex: 1;
} */

.richTextContainer .editorContainer textarea {
  min-height: 400px;
  font-family: monospace;
  background-color: white;
  flex: 1;
}

.richTextContainer .renderedContent {
  margin: 15px;
  margin-top: 0;
  flex: 1;
}

.richTextContainer .renderedContent>*,
.richTextContainer .renderedContent h1 {
  margin-top: 0;
  /* there's an edit bar so reduce the amount of space at the top; it's unnecessary. */
}

.homeCalendars {
  /* scale: 80%; */
  display: flex;
  flex-wrap: wrap;
  width: fit-content;
}

.homeCalendars>* {
  flex-grow: 0;
}

.homeCalendars .filler {
  flex-grow: 1;
}


.cmcard {
  width: fit-content;
  min-width: 640px;
  /* --card-height: 150px; */
  /* height: var(--card-height); */
  /* width: 580px; */
  /* border: 2px solid #888; */
  border: 0;
  border-radius: 2px;
  margin: 10px 0 17px 38px;
}

.cmcard.event {
  max-width: 800px;
}

.cmcardList-vertical {
  display: flex;
  flex-direction: column;
}

/* when displaying in a vertical list, it looks messy if cards are different widths */
.cmcardList-vertical .cmcard {
  width: unset;
  min-width: none;
}

.cmcard .cardContent {
  display: flex;
  /* height: 100%; */
  /* helps distinguish borders when the photo makes it unclear */
  /* border-left: solid 12px var(--primary-color); */
  background-image: url(/images/card.jpg);
  background-position: 25% 40%;
  background-size: 250%;
}

.cmcard.rehearsal .cardContent {
  background-image: url(/images/8team.jpg);
  background-position: 0% 25%;
  background-size: 50%;
}

.cmcard .left {
  /* height: 100%; */
  /* width: 20px; */
  /* background-color: var(--primary-color); */
  display: flex;
  align-content: center;
  justify-content: center;
  align-items: center;
}

.cmcard.concert .left {
  background-color: var(--primary-color);
}

.cmcard.rehearsal .left {
  background-color: #800;
}


.cmcard .left .leftVertText {
  -webkit-text-orientation: upright;
  text-orientation: sideways;
  color: #fffc;
  writing-mode: vertical-rl;
  font-family: monospace;
  font-size: 33px;
  letter-spacing: 10px;
  /* for short cards, keep some margin around the text */
  margin: 13px 0px;
  font-weight: bolder;
}

.cmcard.rehearsal .left .leftVertText {
  font-size: 23px;
}

.cmcard .image {
  background-color: rgba(0, 0, 0, 0);
  /* height: 100%; */
  /* width: var(--card-height); */
  width: 150px;
}

.cmcard .hcontent {
  border-left: dotted 4px #0008;
  background-color: white;
  flex: 2;
  /* height: 100%; */
  /* border-right: dotted 4px black; */
  display: flex;
  flex-direction: column;
  background: linear-gradient(130deg, #f1f1fc, #fffffff0);
  padding: 0px 60px;
}

/* all stuff in hcontent area is centered horiz */
.cmcard .hcontent>* {
  display: flex;
  /* align-items: center; */
  justify-content: center;
}

.cmcard.rehearsal .hcontent {
  border-left: solid 1px black;
}

.cmcard .chipContainer {
  /* margin: 6px; */
  display: flex;
  align-items: flex-start;
  justify-content: center;
  flex-wrap: wrap;
  align-content: center;
}



.cmcard .chip {
  background-color: #ccc;
  color: white;
  margin: 4px;
}


.cmcard .date {
  text-transform: uppercase;
  letter-spacing: 2px;
  text-align: center;
  font-size: 12px;
  padding: 4px;
  color: #666;
  border-bottom: 1px dashed #888;
}

.cmcard.rehearsal .date {
  border: none;
}

.cmcard .name {
  text-transform: uppercase;
  text-align: center;
  padding: 0;
  font-size: 30px;
  font-weight: bold;
  flex-grow: 1;
  /* let confirmed status hug*/
  padding-bottom: 0;

  display: flex;
  justify-content: center;
  align-items: center;
}

.cmcard .status {
  font-size: 14px;
  text-transform: uppercase;
  display: flex;
  justify-content: center;
  align-items: center;
  letter-spacing: 2px;
  font-weight: bold;
}

.cmcard .status.confirmed {
  color: green;
}

.cmcard .attendance,
.attendanceResponseInput .selectedValue {
  font-size: 14px;
  padding-bottom: 15px;
  text-transform: uppercase;
  display: flex;
  justify-content: center;
  align-items: center;
  letter-spacing: 2px;
  font-weight: bold;
}

.cmcard .attendance .chip,
.attendanceResponseInput .selectedValue {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 2px 10px;
  border-radius: 10px;
  color: white;
}

.attendanceResponseInput .selectedValue {
  flex-direction: column;
  display: flex;
  width: max-content;
  align-items: flex-start;
  background-color: #9acd3229;
  color: yellowgreen;
}

.cmcard .attendance.yes .chip {
  background-color: #9acd3229;
  color: yellowgreen;
}



.cmcard .info {
  text-align: center;
  padding: 1px;
  font-size: 14px;
  color: blue;
  /* border-top: 1px dashed #888; */
}

.cmcard .hcontent>*:last-child {
  border-top: 1px dashed #888;
}

.cmcard.rehearsal .info {
  color: black;
  border: none;
}


.attendanceResponseInput {
  /* border: solid 2px #0008;
  padding: 15px; */
}

.attendanceResponseInput .segmentName {
  font-size: 18px;
  font-weight: bold;
  /* margin-bottom: 2px;
  border-bottom: 1px dotted #0004;
  padding-bottom: 10px; */
}

.attendanceResponseInput .segment {
  margin-bottom: 12px;
  margin-right: 19px;
  /* without left margin the shadow is chopped off sometimes (alerts) */
  margin-left: 4px;
  background-color: white;
  border-radius: 4px;
  padding: 8px 12px;
  box-shadow: var(--subtle-elevation);
  border-left: 6px solid #88f6;
}

.attendanceResponseInput .segment.alert {
  background-color: #fc75;
  border-left: 6px solid orange;
}

.segment .header {
  display: flex;
}

.segment .header .icon {
  height: 30px;
  width: 30px;
  color: red;
}



.attendanceResponseInput .segmentList {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.attendanceResponseInput .yes.noSelection,
.attendanceResponseInput .yes.selected {
  color: white;
  background-color: green;
}

.attendanceResponseInput .yes_maybe.selectedValue .icon,
.attendanceResponseInput .yes_maybe.selectedValue .text {
  color: yellowgreen;
}

.textWithIcon,
.flexVerticalCenter {
  display: flex;
  /* align-content: center; */
  align-items: center;
}

.attendanceResponseInput .yes_maybe.noSelection,
.attendanceResponseInput .yes_maybe.selected {
  color: white;
  background-color: yellowgreen;
}

.attendanceResponseInput .no_maybe.noSelection,
.attendanceResponseInput .no_maybe.selected {
  color: white;
  background-color: orange;
}

.attendanceResponseInput .no.noSelection,
.attendanceResponseInput .no.selected {
  color: white;
  background-color: red;
}

.attendanceResponseInput .some.noSelection {
  color: white;
  background-color: red;
}

.attendanceResponseInput .some.selected {
  color: white;
  background-color: #675;
}

.attendanceResponseInput .yes.notSelected,
.attendanceResponseInput .yes_maybe.notSelected,
.attendanceResponseInput .no_maybe.notSelected,
.attendanceResponseInput .no.notSelected {
  color: #666;
  background-color: #ccc;
  opacity: 50%;
}

.attendanceResponseInput input.add_comment {
  font-size: 16px;
  background-color: transparent;
  border: 1px solid #0002;
  border-radius: 7px;
  padding: 4px;
  margin: 0 13px;
  width: 400px;
}

.attendanceResponseInput .placeholderText {
  color: #0006;
  letter-spacing: normal;
  text-decoration: none;
  text-transform: none;
  font-style: italic;
  font-weight: normal;
  display: flex;
  align-items: center;
  font-size: 14px;
}

.attendanceResponseInput .selectedValue .placeholderText .icon {
  color: #0008;
  width: 14px;
  height: 14px;
}


.contentSection {
  /* spacing is already provided by parent layout*/
  /* margin: 20px; */
  padding: 0px;
  padding-bottom: 20px;
  border-radius: 4px;
  background-color: white;
  margin-bottom: 40px;
  box-shadow: var(--subtle-elevation);
  max-width: 1500px;
}

.contentSection>.header {
  padding: 2px 15px;
  background-color: #ccc;
  display: flex;
  align-items: center;
}

.contentSection>.content {
  padding: 2px 15px;
}

.contentSection .titleLine {
  display: flex;
  align-items: center;
}

.contentSection .infoLine {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  /* margin-bottom: 12px; */
}

.contentSection .titleText {
  font-size: 34px;
  font-weight: bold;
  color: var(--primary-color);
  text-transform: uppercase;
  margin: 3px 0px;
}

.contentSection.rehearsal .titleText {
  color: #800;
}

.contentSection.event {
  border-left: solid 16px var(--primary-color);
}

.contentSection.event>.header {
  background-color: var(--visibility-other-bgcolor);
}

.contentSection.event.visibility-private>.header {
  background-color: var(--visibility-private-bgcolor);
  color: var(--visibility-private-color);
}

.contentSection.event.visibility-public>.header {
  background-color: #eee;
  color: black;
  /* background-color: var(--visibility-public-bgcolor);
  color: var(--visibility-public-color); */
}


.contentSection .statusIndicator {
  display: flex;
  align-items: center;
  text-transform: uppercase;
  color: green;
  background-color: #0a02;
  padding: 2px 8px;
  border-radius: 4px;
  font-size: 12px;
}

.contentSection .tagsLine {
  margin: 0 0 12px 0;
}

.contentSection .smallInfoBox {
  /* background-color: #eee; */
  margin-right: 20px;
  /* margin-bottom: 10px; */
  display: flex;
  align-items: center;
  opacity: 50%;
  font-size: 19px;
  text-transform: uppercase;
  font-weight: bold;
  white-space: nowrap;
}

.contentSection .smallInfoBox .icon {
  opacity: 50%;
}

.contentSection .titleTagsContainer .MuiChip-root {
  margin-right: 10px;
  text-transform: uppercase;
}

.contentSection .approvalSummaryLine {
  display: flex;
  align-items: center;
}

.contentSection .approvalSummaryLine .approvalItem {
  /* background-color: #eee; */
  margin-right: 20px;
  padding: 1px 13px;
  display: flex;
  align-items: center;
  border-radius: 4px;
  margin-bottom: 10px;
}

.approvalSummaryLine .approvalItem .prompt {
  font-weight: bold;
  font-size: 18px;
}

.approvalSummaryLine .approvalItem .icon {
  height: 20px;
  width: 20px;
  margin-right: 8px;
}

.approvalSummaryLine .approvalItem.approved {
  background-color: #0802;
  color: green;
}

.approvalSummaryLine .approvalItem.rejected {
  background-color: #8002;
  color: red;
}

/* user is prompted */
.approvalSummaryLine .approvalItem.noResponse {
  background-color: #ffa50026;
  color: orange;
  padding: 10px;
}


/* when an approval is sorta not relevant anymore, de-emphasize it. */
.approvalSummaryLine.weaker {
  opacity: 40%;
}

.approvalButtonGroup {
  margin: 8px;
}

.approvalButtonGroup .yes {
  color: white;
  background-color: green;
}

.approvalButtonGroup .no {
  color: white;
  background-color: red;
}

.approvalButtonGroup .null {
  /* color: white;
  background-color: green; */
}

.approvalItem .responseChip {
  display: flex;
  align-items: center;
}

.seeMoreButton {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.attendanceDetailGrid {
  display: flex;
  flex-direction: column;
}

.attendanceDetailGrid .row {
  display: flex;
}

.attendanceDetailGrid .row .cell {
  width: 100px;
}

.attendanceResponseChip {
  display: flex;
  align-items: center;
  border-radius: 6px;
}

.attendanceResponseChip.yes_maybe {
  display: flex;
  align-items: center;
  color: yellowgreen;
  background-color: #ffc;
}

.attendanceResponseChip .icon {}

.attendanceResponseChip .responseText {}

.attendanceResponseChip .userComment {}


/* when datepicker is in an intermediate invalid date state, it will display an error. we don't want that error to be shown if the control is disabled */
.CMDatePicker.CMDisabled .Mui-error {
  color: #8888;
}

.CMDatePicker.CMDisabled div.Mui-error {
  border: 1px solid #8888;
  background-color: #eee;
}

.cmalert {
  /* by default multiple <Alert> have no space between. considering we're putting a lot in each alert, and each alert is for a distinctly different context,
put spacing.*/
  margin-bottom: 15px;

  /* when placing an alert directly on the page (not a white surface), make it pop out more*/
  border: 1px solid #f004;
}

.MuiButton-root.selected {}

.EditableTextControl .valueContainer {

  /* your profile page, the fields there need to have relative position so inputlabels are positioned correctly. */
  position: relative;
}


/* your profile fields */
.formFieldContainer {
  border: 1px solid black;
  margin: 4px;
  padding: 3px 5px;
}


/* default table formatting to at least reveal cell boundaries */
table {
  border: 1px solid #0006;
  margin: 8px 6px;
}


table td {
  background-color: #0000000c;
  border-radius: 3px;
  padding: 2px 6px;
}


.CMEditGrid2 .MuiDataGrid-virtualScroller {
  min-height: 40px;
  /* when there are no rows, there's a "nothing to show" overlay, but with our row height auto, it will result in a 1px-height area. this allows the overlay to show.*/
}

/* todo:  this is no good */
.pleasebemorespecific .comment {
  border: 1px solid black;
  padding: 7px;
  margin: 7px;
}

div.segment {
  border: 1px solid black;
  padding: 7px;
  margin: 7px;
}