:root {
  --drawer-paper-width: 100px;
  --data-grid-column-header-background-color: #f0f0f0;
  --primary-color: red;

  --subtle-elevation: 2px 2px 5px 2px rgba(0, 0, 0, 0.1);
  --even-more-subtle-elevation: 2px 2px 5px 2px rgba(0, 0, 0, 0.1);

  /* todo: get rid of these and use proper coloring*/
  --general-interactable-bgcolor: #79b;
  --general-interactable-color: #eee;

  --color-foreground: #f0f;
  --color-background: #eee;
  --color-border-style: "dotted";

  --content-max-width: 750px;

  --ff-mono: ui-monospace, "Cascadia Mono", "Segoe UI Mono", "Liberation Mono", Menlo, Monaco, Consolas, monospace;
}

pre {
  font-family: var(--ff-mono);
}

body {
  line-height: unset;
  letter-spacing: unset;
}

a,
a:link,
a:hover,
a:visited {
  text-decoration: none;
}


a.logo,
a.logo:link,
a.logo:hover,
a.logo:visited {
  color: #ede331;
}


header .headerIndicatorBar {
  pointer-events: none;
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 8px;
  opacity: 50%;
}


header .headerIndicatorBar.impersonating {
  background: none;
  background-color: #c44;
}

.NODE_ENV_development .logo {
  /* background-color: #444; */
  text-decoration: line-through;
}

/* 
.NODE_ENV_development .headerIndicatorBar {
  background-color: #ffcc00;
  background-image: repeating-linear-gradient(-25deg, #ffcc00, #ffcc00 10px, #000000 10px, #000000 20px);
} */

/* typically h1 at the top of a section doesn't need any padding or it looks awkwardly pushed down */
h1:first-child {
  padding-top: 0;
  margin-top: 0;
}

.smallIconButton {
  display: flex;
}

.MuiDrawer-paper {
  width: var(--drawer-paper-width);
}

.MuiButton-root {
  border: 2px outset #8883;
  padding: 1px 8px;
}

/* 
this looks nice but gives the impression of a button that's not clickable.
.MuiButton-startIcon {
  opacity: 35%;
} */

.MuiDataGrid-columnHeaders {
  background-color: var(--data-grid-column-header-background-color);
}

.MuiDataGrid-footerContainer {
  background-color: var(--data-grid-column-header-background-color);
}

.MuiDataGrid-toolbarContainer {
  background-color: var(--data-grid-column-header-background-color);
}

.hoverActionIcon:hover {
  color: var(--primary-color);
}

/* this is a small way to make selected nav more visible */
nav>.Mui-selected {
  border-right: 4px solid var(--primary-color);
}

nav>* {
  border-right: 4px solid transparent;
}

/* for selecting user roles, if user can select chip text it gets very annoying. */
.MuiChip-label {
  user-select: none;
}

.CMEditGrid2 {
  /* for some reason by default grids are 100% height; there's 0 reason to want that. */
  height: auto;
}

.CMEditGrid2 .MuiDataGrid-cell {
  /* align-items: flex-start; */
  /* allow things like tag chips to wrap */
  flex-wrap: wrap;
  /* and they look very ugly by default they fill space; this makes look more like text flow */
  align-content: baseline;
}

/* some datagrid values can be like, huge markdown pages or something. don't allow that to make the grid unreadable.*/
.MuiDataGrid-cellContent {
  overflow: hidden;
  text-overflow: ellipsis;
  max-height: 140px;
}

/* some datagrid values can be like, huge markdown pages or something. don't allow that to make the grid unreadable.*/
.MuiDataGrid-cellContent.NoMaxHeight {
  max-height: none;
}

div.Mui-error {
  background-color: #fee;
  border: 1px solid red;
}

div.chipContainer {
  padding: 4px;
}

div.chipContainer.validationError {
  background-color: #fee;
  border: 1px solid red;
}

div.chipContainer.validationSuccess {
  border: 1px solid green;
}

.cmdbChip {
  margin: 2px;
}

/* your profile page, instrument list */
div.instrumentListVertical {
  padding: 4px;
  display: flex;
  flex-direction: column;
}

div.instrumentListVertical.validationError {
  background-color: #fee;
  border: 1px solid red;
}

div.instrumentListVertical.validationSuccess {
  border: 1px solid green;
}

div.instrumentListVertical .instrumentAndPrimaryContainer {
  display: flex;
}


/* rich text editor */
.richTextContainer {
  display: flex;
  min-height: 50px;
  /* it's tempting to do this, to highlight where the text is, but all the various widths on the page are ugly af */
  /* background-color: rgba(0, 0, 0, 0.03); */
  max-width: 800px;
  flex-direction: column;
}

.richTextContainer.editMode {
  max-width: none;
  width: 100%;
}

.richTextContainer.editable {
  border: 1px solid #ddd;
}

.richTextContainer .richTextContentContainer {
  display: flex;
}

.markdown.renderedContent.compact {
  /* allow the rendered content to shrink so it doesn't always fill up the row 100%, and some padding to allow the button on the same line.
  see: attendance comment control
  */
  flex: 0 1;
  padding-right: 10px;
}

.richTextContainer.compactMarkdownControlRoot.compact.editable:hover {
  text-decoration: underline;
}

.richTextContainer.compactMarkdownControlRoot.compact {
  margin: 0;
  min-height: auto;
}

/* during editing, visually group together all these pieces. preview, editor, buttons, help ...*/
.compactMarkdownControlRoot.editing {
  border: 1px solid #ddd;
  padding: 2px;
}


.richTextContainer .editControlsContainer {
  /* background-color: rgba(0, 0, 0, 0.06); */
  background: linear-gradient(89deg, #0001, transparent);
}

.richTextContainer .editControlsContainer>div {
  /* make things like helpText not go on new lines. */
  display: inline-block;
}

.richTextContainer .editControlsContainer button {
  margin: 0;
  padding: 0;
}

.richTextContainer .editorContainer {
  /* more comfy leaving some space for the edit ctrls*/
  flex: 1;
  display: flex;
}

/* 
.richTextContainer .editorContainer .input {
  flex: 1;
} */

.richTextContainer .editorContainer textarea {
  min-height: 400px;
  font-family: var(--ff-mono);
  background-color: white;
  flex: 1;
}

.richTextContainer .renderedContent {
  margin: 15px;
  margin-top: 0;
  flex: 1;
}

.richTextContainer .renderedContent>*,
.richTextContainer .renderedContent h1 {
  margin-top: 0;
  /* there's an edit bar so reduce the amount of space at the top; it's unnecessary. */
}

.markdown.renderedContent.compact {
  margin: 0;
  padding: 0;
  color: #999;

  font-style: italic;
}

.markdown.renderedContent.compact>p,
.markdown.renderedContent.compact>*>p {
  margin: 0;
  padding: 0;
}

.homeCalendars {
  /* scale: 80%; */
  display: flex;
  flex-wrap: wrap;
  width: fit-content;
}

.homeCalendars>* {
  flex-grow: 0;
}

.homeCalendars .filler {
  flex-grow: 1;
}


.segment .header {
  display: flex;
}

.segment .header .icon {
  height: 30px;
  width: 30px;
  color: red;
}

.textWithIcon,
.flexVerticalCenter {
  display: flex;
  /* align-content: center; */
  align-items: center;
}

.contentSection {
  /* spacing is already provided by parent layout*/
  /* margin: 20px; */
  padding: 0px;
  /* don't put too much; gallery items are presented as a list so many should be visibile */
  padding-bottom: 14px;
  border-radius: 4px;
  background-color: white;
  margin-bottom: 40px;
  box-shadow: var(--subtle-elevation);
  /* max-width: var(--content-max-width);
  width: max-content; */

  /* this allows children to position absolute to the content section (case in point: backstage index announcement markdown with floating header */
  position: relative;

  /* the simplest way to deal with responsive layout is to just keep everything exactly the same width
  representing a comfortable mobile experience.*/
  width: var(--content-max-width);
}

.contentSection.fullWidth {
  width: 100%;
}

.contentSection>.header {
  padding: 3px;
  background-color: #eee;
  display: flex;
  align-items: center;
}

.contentSection>.header>* {
  margin: 0;
  margin-left: 10px;
}

.contentSection>.header>*:first-child,
.contentSection>.header>*:last-child {
  margin: 0 10px;
}

.contentSection>.content {
  padding: 2px 15px;
}

.contentSection .titleLine {
  display: flex;
  align-items: center;
}

.contentSection .titleLine+.titleLine {
  /*pull title lines closer together*/
  margin-top: -8px;
}

.contentSection .titleLine>* {
  margin-right: 10px;
}

.contentSection .subtitleLine {
  color: #888;
}

.contentSection .infoLine {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  /* margin-bottom: 12px; */
}

/* this is a vertical column, allowing for a title + subtitle */
.contentSection .titleText {
  font-size: 35px;
  font-weight: bold;
  color: var(--primary-color);
  text-transform: uppercase;
  margin-right: 20px;

  letter-spacing: -1px;
  line-height: 39px;

}

.CustomLink.contentSection .titleText {
  font-size: 28px;
  font-weight: bold;
  text-transform: none;
}

.contentSection .titleText .titleLink {
  display: flex;
  color: var(--primary-color);
  align-items: center;
}

.contentSection .titleText .subtitle {
  color: #ccc;
  font-size: 18px;
  font-weight: normal;
  /*hug the title a bit*/
  /* line-height: 20px; */
  /* no negative margin; it makes things visually uneven when small etc */
  /* margin-top: -10px; */
  font-style: italic;
}

.contentSection.rehearsal .titleText {
  color: #800;
}

.contentSection.event {
  --border-left-color: #3575;
  border-left: solid 8px var(--border-left-color);
  overflow: hidden;
}

.contentSection.event.ApplyBorderLeftColor {
  /* --border-left-color: var(--color-foreground); */
  --border-left-color: var(--color-background);
}

/* only for search results list; don't fade a cancelled event when you're looking into its details */
.searchResults .contentSection.event.status_Cancelled {
  opacity: 50%;
  /* filter: saturate(0); */
}

.searchResults .contentSection.event.status_Cancelled .titleText {
  text-decoration: line-through;
}

.contentSection.EventDetail.past {
  opacity: 50%;
}


.contentSection .statusIndicator {
  display: flex;
  align-items: center;
  text-transform: uppercase;
  color: green;
  background-color: #0a02;
  padding: 2px 8px;
  border-radius: 4px;
  font-size: 12px;
}

.contentSection .tagsLine {
  margin: 0 0 12px 0;
}

.contentSection .smallInfoBox {
  display: flex;
  align-items: center;
  font-size: 21px;
  /* text-transform: uppercase; */
  font-weight: bold;
  white-space: nowrap;
  color: #888;
  margin-bottom: 5px;
  letter-spacing: -.7px;
  line-height: 25px;
}

.contentSection .smallInfoBox.location {
  font-size: 15px;
  font-weight: normal;
  letter-spacing: normal;
}

.contentSection .smallInfoBox.date .text {
  padding-right: 10px;
}

.contentSection .smallInfoBox .icon {
  opacity: 50%;
}

.contentSection .titleTagsContainer .MuiChip-root {
  margin-right: 10px;
  text-transform: uppercase;
}


.contentSection .contentRow {
  display: flex;
  align-items: baseline;
}

.contentSection .contentRow>* {
  margin-right: 10px;
}


.contentSection .contentRow.EmphasizedProperty {
  font-size: 24px;
  color: #888;
}


.contentSection .approvalSummaryLine {
  display: flex;
  align-items: center;
}

.contentSection .approvalSummaryLine .approvalItem {
  /* background-color: #eee; */
  margin-right: 20px;
  padding: 1px 13px;
  display: flex;
  align-items: center;
  border-radius: 4px;
  margin-bottom: 10px;
}





/* search results overrides to make it less emphatic */
.searchResults .contentSection {
  margin-bottom: 20px;
  --border-left-color: #ccc;
  border-left: solid 4px var(--border-left-color);
  box-shadow: var(--even-more-subtle-elevation);
  padding-bottom: 0px;
}

.searchResults .contentSection:hover {
  /* border-left: solid 6px #88f; */
  outline: 1px solid blue;
}

.searchResults .contentSection .titleText {
  font-size: 30px;
  ;
}

/* when showing the attendance control in search results list, where items are more compact and reduced padding, it butts up to the bottom and this compensates. */
.searchResults .contentSection .eventAttendanceControl {
  margin-bottom: 10px;
}

.contentSection .approvalSummaryLine .approvalItem .prompt {
  font-weight: bold;
  font-size: 18px;
}

.approvalSummaryLine .approvalItem .icon {
  height: 20px;
  width: 20px;
  margin-right: 8px;
}

.approvalSummaryLine .approvalItem.approved {
  background-color: #0802;
  color: green;
}

.approvalSummaryLine .approvalItem.rejected {
  background-color: #8002;
  color: red;
}

/* user is prompted */
.approvalSummaryLine .approvalItem.noResponse {
  background-color: #ffa50026;
  color: orange;
  padding: 10px;
}


/* when an approval is sorta not relevant anymore, de-emphasize it. */
.approvalSummaryLine.weaker {
  opacity: 40%;
}

.approvalButtonGroup {
  margin: 8px;
}

.approvalButtonGroup .yes {
  color: white;
  background-color: green;
}

.approvalButtonGroup .no {
  color: white;
  background-color: red;
}

.approvalItem .responseChip {
  display: flex;
  align-items: center;
}

.seeMoreButton {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.attendanceDetailGrid {
  display: flex;
  flex-direction: column;
}

.attendanceDetailGrid .row {
  display: flex;
}

.attendanceDetailGrid .row .cell {
  width: 100px;
}

.attendanceResponseChip {
  display: flex;
  align-items: center;
  border-radius: 6px;
}

.attendanceResponseChip.yes_maybe {
  display: flex;
  align-items: center;
  color: yellowgreen;
  background-color: #ffc;
}

/* when datepicker is in an intermediate invalid date state, it will display an error. we don't want that error to be shown if the control is disabled */
.CMDatePicker.CMDisabled .Mui-error {
  color: #8888;
}

.CMDatePicker.CMDisabled div.Mui-error {
  border: 1px solid #8888;
  background-color: #eee;
}

.cmalert {
  /* by default multiple <Alert> have no space between. considering we're putting a lot in each alert, and each alert is for a distinctly different context,
put spacing.*/
  margin-bottom: 15px;

  /* when placing an alert directly on the page (not a white surface), make it pop out more*/
  border: 1px solid #f004;
}

.EditableTextControl .valueContainer {

  /* your profile page, the fields there need to have relative position so inputlabels are positioned correctly. */
  position: relative;
}


/* your profile fields */
.formFieldContainer {
  border: 1px solid black;
  margin: 4px;
  padding: 3px 5px;
}


/* default table formatting to at least reveal cell boundaries */
table {
  border: 1px solid #0006;
  margin: 8px 6px;
}


table td {
  background-color: #0000000c;
  border-radius: 3px;
  padding: 2px 6px;
}


table tfoot td {
  background-color: transparent;
  font-weight: bold;
  font-family: var(--ff-mono);
}

.CMEditGrid2 .MuiDataGrid-virtualScroller {
  /* when there are no rows, there's a "nothing to show" overlay, but with our row height auto, it will result in a 1px-height area. this allows the overlay to show.*/
  min-height: 40px;
}


/* compact markdown editor, other subtle text. */
.helpText,
.tinyCaption,
.smalltext,
.smallText {
  font-size: 13px;
  font-style: italic;
  color: #888;
  display: flex;
  align-items: center;
}

.helpText * {
  display: flex;
  align-items: center;
}

.helpText a {
  margin: 0 10px;
}

/* as a convenience, text fields for fields called "name" to be emphasized. */
.columnName-name input {
  font-weight: bold;
  font-size: 20px;
}

span.verified {
  color: green;
}

span.songListVerified {
  font-size: 18px;
}


.test_quickSearchResultItem {
  display: flex;
  flex-direction: column;
  padding: 4px;
  margin: 4px;
  border-radius: 4px;
  background-color: white;
  border: 1px solid #ddd;
}

.test_quickSearchResultItem:hover {
  background-color: #f8f8f8;
  border: 1px solid blue;
}



.MuiDialog-container {
  height: 100%;
}

.MuiButtonBase-root:focus {
  outline: 2px solid #000;
}

/* #409 on mobile, OK and Cancel buttons become very small; force them to a comfortable size,
and make sure the action buttons area is tall enough so safari's bottom menu doesn't obscure it.
https://stackoverflow.com/questions/23657943/buttons-aligned-to-bottom-of-page-conflict-with-mobile-safaris-menu-bar

safari's zooming, text field focusing, on screen keyboard, and bottom menu bar all cause
issues with accessing the bottom of the dialog (the most important buttons heh).

solution is to
1.) NOT use <DialogActions>. It's a nice feature on desktop but suffers mostly from this problem.
    instead use <DialogActionsCM> which implements corrections.

 */

.CMDialogActions.MuiDialogActions-root {
  margin: 10px 0;
  padding: 15px 0;
  border-top: 1px solid #eee;
  margin-bottom: 100px;
  display: flex;
  flex-direction: column;
}

.CMDialogActions.MuiDialogActions-root .CMDialogActionsButtonContainer {
  margin-bottom: 100px;
  display: flex;
  justify-content: flex-end;
  gap: 10px;
}

.CMDialogActions.MuiDialogActions-root .CMDialogActionsFooter {
  color: #0001;
  user-select: none;
}

.MuiDialogActions-root .MuiButton-root {
  font-size: 20px;
  min-width: 100px;
  min-height: 40px;
}

.AssociationAutocomplete {
  flex-grow: 1;
  /* in setlist editor allow to take the size the parent gives it. */
}

.AssociationAutocomplete {
  flex-grow: 1;
  /* in setlist editor allow to take the size the parent gives it. */
}

.MuiInputBase-root {
  width: 100%;
  /* also required to push the clear button to the right */
}

.GeneralFeatureReportDetailItemRow td .queryText {
  font-family: var(--ff-mono);
  padding: 2px 6px;
  background-color: #ddd;
  color: #999;
}

.GeneralFeatureReportDetailItemRow td .queryText .actualQueryText {
  color: #11e;
}

.FeatureStatsReport .filterContainer {
  padding: 8px;
  background-color: #ddd;
  max-width: 950px;
}

.contextLabelContainer {
  display: flex;
  font-size: 13px;
  font-family: var(--ff-mono);
  gap: 1px;
  letter-spacing: -.5px;
}

.contextLabelContainer .contextLabelPart {
  border-radius: 4px;
  padding: 2px 3px;
  white-space: nowrap;
}

.contextLabelContainer .contextLabelSeparator {
  color: #bbb;
}

.FeatureStatsReport .bucketLabel {
  font-size: 18px;
  font-family: var(--ff-mono);
  border-radius: 4px;
  background-color: #ddd;
  padding: 10px;
  margin: 43px;
}

.recharts-sector {
  opacity: 70%;
}

.recharts-sector:hover {
  opacity: 100%;
}

.DistinctContextObjectTabContent .header {
  display: flex;
  align-items: flex-start;
  padding: 10px;
}



.adHocChipContainer {
  display: flex;
  flex-wrap: wrap;
  gap: 2px;
  align-items: center;
}

.adHocChip {
  display: flex;
  align-items: center;
  background-color: white;
  padding: 2px 6px;
  border-radius: 3px;
}

.adHocChip>.adHocChipStartIcon {
  margin-right: 6px;
}

.adHocChip>.adHocChipContent {
  font-size: 13px;
  font-family: var(--ff-mono);
  letter-spacing: -0.3px;
}