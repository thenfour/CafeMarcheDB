.workflowNodeGroupContainer {
    /* border: 1px solid var(--color-background); */
    /* border-left: 6px solid var(--color-background); */
    margin: 5px;
}

.workflowNodeGroupContainer>.header,
.workflowNodeGroupContainer>.content {
    /* padding: 3px;
    padding-left: 0; */
}

.workflowNodeGroupContainer>.header {
    background-color: var(--color-background);
    color: var(--color-foreground);
    padding: 4px;
}

.workflowNodeGroupContainer .groupName {
    /* font-weight: bold; */
    /* font-size: large; */
    opacity: 50%;
}


.workflowNodeContainer {
    display: flex;
    margin: 0;
    padding: 0;
    flex-direction: row;
    align-items: stretch;
    /* border-left: 4px solid var(--color-background); */
}

.workflowNodeContainer>.borderLeft {
    background-color: var(--color-background);
    width: 4px;
    /* opacity: 50%; */
    margin-right: 10px;
}

.workflowNodeContainer>.notBorderLeft {
    padding: 7px 0;
    display: flex;
    flex-grow: 1;
    flex-direction: column;
}

.workflowNodeContainer:hover {
    background-color: #eef;
}

.workflowNodeContainer .header {
    display: flex;
    flex-direction: row;
    align-items: center;
    flex-grow: 1;
}

.workflowNodeContainer .body {
    margin-left: 36px;
    display: flex;
    flex-direction: column;
}

.workflowNodeContainer .indicator {
    width: 36px;
    display: flex;
}

.workflowNodeContainer .nameLabel {
    letter-spacing: -.5px;
    font-weight: bold;
    flex-grow: 1;
}


.workflowNodeContainer .nameLabel {
    opacity: 25%;
}

.workflowNodeContainer.Activated .nameLabel {
    opacity: 100%;
}

.workflowNodeContainer .dotMenu {
    width: 40px;
}


.WorkflowNodeDueDateValue {
    display: flex;
    align-items: center;
}

.dueDateContainer {
    display: flex;
    align-items: center;

    opacity: 80%;
    /* padding: 4px;
    margin: 4px; */
    border-radius: 4px;
    border: 1px solid transparent;
    font-size: 14px;
}


.dueDateContainer.overdue {
    color: #f60;
    background-color: #ff8;
    /* border: 1px solid #f80; */
    padding: 6px;
}


.workflowContainer {
    background-color: white;
    padding: 3px;
}

.workflowContainer .name {
    display: flex;
    align-items: center;
}

.workflowContainer .name.selectable {
    cursor: pointer;
}

.workflowContainer .selectionHandle {
    width: 20px;
    height: 20px;
    border-radius: 3px;
    background-color: #ccc;
    display: inline-block;
    cursor: pointer;
    margin: 4px;
}

.workflowNodeContainer.selected .nodeName .selectionHandle,
.workflowNodeGroupContainer.selected .groupName .selectionHandle {
    background-color: blue;
}

/* ---- REACT FLOW */
.react-flow {
    --xy-background-color: white;
}

.react-flow__node-cmNormal {
    color: #999;
    background-color: #fff8;
    /* border: 2px solid #999; */
    border-radius: 4px;
    padding: 0px;

    max-width: 250px;
}

.react-flow__node-cmNormal>div.normalNodeContent {
    border: 3px solid var(--color-background);
}

.react-flow__node-cmNormal>div.normalNodeContent>div.normalNodeInner {
    border: 0;
    padding: 6px;
}

.react-flow__node-cmNormal.selected {
    color: black;
    outline: 2px solid blue;
    /* border-color: blue;
    background-color: #fff; */
}

.react-flow__node.selectable:focus,
.react-flow__node.selectable:focus-visible {
    outline: 2px solid blue;
}



.react-flow__node-cmNormal .normalNodeInner {
    /* vertically center caption + progress indicator */
    display: flex;
    align-items: center;
}

.react-flow__node-cmNormal .normalNodeInner .name {
    white-space: nowrap;
    /* display: inline-block; */
    text-overflow: ellipsis;
    overflow: hidden;
    font-size: 12px;
}

.react-flow__node-cmGroup {
    border: 0;
    padding: 10px;
}

.react-flow__node-cmGroup .CMFlowGroup {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    outline: 2px solid var(--color-background);
}

.react-flow__node-cmGroup.selected .CMFlowGroup {
    outline: 2px solid blue;
}

.react-flow__node-cmGroup .CMFlowGroupBackground {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border: 0;
    /* color: var(--color-foreground); */
    background-color: var(--color-background);
    opacity: 10%;
}


.react-flow__resize-control {
    /* put resize handles above all */
    z-index: 200;
}

.react-flow__resize-control.line {
    /* too noisy to show these*/
    border-color: transparent;
}


.react-flow__handle,
.react-flow__resize-control.handle {
    width: 9px;
    height: 9px;
}

.react-flow__node-cmGroup.selected .CMFlowGroupBackground {
    opacity: 50%;
}

.CMFlowGroupLabel {
    background-color: var(--color-background);
    color: var(--color-foreground);
    opacity: 40%;
}

.react-flow__node-cmGroup.selected .CMFlowGroupLabel {
    opacity: 100%;
}


.react-flow__edge-path {
    stroke: var(--hashed-color);
    stroke-width: 1px;
}

.react-flow__edge.selected .react-flow__edge-path {
    stroke-width: 4px;
    stroke: var(--hashed-color);
}

.react-flow__edge.CMTargetSelected .react-flow__edge-path {
    stroke-width: 2.5px;
}

.react-flow__edge.CMSourceSelected .react-flow__edge-path {
    stroke-width: 1.75px;
}

/* very tired of react flow hiding my elements for no good reason. */
.react-flow__node {
    visibility: visible !important;
    box-shadow: var(--subtle-elevation);
}


.CMWorkflowNodeEditorContainer {
    padding: 3px;
    background-color: white;
}

.CMWorkflowNodeEditorContainer .WorkflowNodeDependencyHandle {
    width: 12px;
    height: 12px;
    border-radius: 3px;
    background-color: var(--hashed-color);
    margin: 4px;
}

.CMWorkflowNodeEditorContainer .dependencyHeader {
    display: flex;
    align-items: center;
}

.CMWorkflowNodeEditorContainer .criteriaDescription {
    background-color: #0001;
    margin: 5px;
    padding: 5px;
    color: #0009;
    font-style: italic;
    font-size: 12px;
}

.CMWorkflowNodeEditorContainer .alert,
.CMWorkflowNodeEditorContainer .error {
    margin: 10px;
    padding: 10px;
    font-style: italic;
    font-size: 12px;
    font-weight: bold;
    border-radius: 6px;
}

.CMWorkflowNodeEditorContainer .alert {
    color: rgb(174, 33, 255);
    background-color: #ffc;
}

.CMWorkflowNodeEditorContainer .error {
    color: #f40;
    background-color: #ffc;
}

.CMWorkflowNodeEditorContainer .nodeNameInput input {
    font-size: 20px;
    font-weight: bold;
}

.assigneeCaption svg {
    /* for assignees this is a little status icon; give it space from the name next */
    margin-left: 2px;
}

.WorkflowDefSelect,
.WorkflowDefRootDataEditorGroup,
.WorkflowEditorPOC {
    background-color: #ddd;
    margin: 8px 0;
    padding: 8px;
    border: 2px solid #666;
    border-radius: 3.5px;
}

.WorkflowDefRootDataEditorGroup .header {
    font-weight: bold;
    font-family: monospace;
}


@keyframes errorIconFlash {

    0%,
    100% {
        opacity: 1;
    }

    50% {
        opacity: 0;
    }
}

.errorIcon {
    color: red;
    animation: errorIconFlash .8s infinite;
}


.workflowEditorGraphRowContainer {
    display: flex;
    flex-direction: row;
}

.workflowEditorGraphRowContainer>* {

    flex-grow: 1;
    flex-basis: 0;
    min-width: 0;
}